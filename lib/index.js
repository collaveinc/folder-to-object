// Generated by CoffeeScript 2.4.1
(function() {
  var async, defaults, fg, handleFiles, handleOpts, join, parse, relative, sync;

  fg = require('fast-glob');

  ({relative, join, parse} = require('path'));

  defaults = {
    extensions: ['js', 'ts', 'coffee', 'json']
  };

  handleFiles = function(dir, files) {
    var currentObject, file, i, j, len, len1, object, parsed, token, tokens;
    object = {};
    for (i = 0, len = files.length; i < len; i++) {
      file = files[i];
      parsed = parse(file);
      tokens = relative(parsed.dir, dir).split('/');
      currentObject = object;
      for (j = 0, len1 = tokens.length; j < len1; j++) {
        token = tokens[j];
        if (!token) {
          continue;
        }
        currentObject = object[token] != null ? object[token] : object[token] = {};
      }
      currentObject[parsed.name] = require(join(process.cwd(), file));
    }
    return object;
  };

  handleOpts = function(opts) {
    if ('string' === typeof opts) {
      return {
        dir: opts
      };
    }
    return opts;
  };

  sync = function(opts) {
    var dir, extensions;
    ({dir, extensions = defaults.extensions} = handleOpts(opts));
    return handleFiles(dir, fg.sync(join(dir, `**/*.(${extensions.join('|')})`)));
  };

  async = async function(opts) {
    var dir, extensions;
    ({dir, extensions = defaults.extensions} = handleOpts(opts));
    return handleFiles(dir, (await fg.async(join(dir, `**/*.(${extensions.join('|')})`))));
  };

  module.exports = {sync, async};

}).call(this);
